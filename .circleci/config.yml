---
version: 2.1

defaults: &defaults
  docker:
    - image: greenpeaceinternational/circleci-base:latest
  working_directory: /home/circleci/app

job-references:
  setup_environment: &setup_environment
    name: "Setup Environment Variables"
    command: |
      source /home/circleci/.bashrc

jobs:
  lint:
    <<: *defaults
    docker:
      - image: greenpeaceinternational/p4-unit-tests:nodelts
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: *setup_environment
      - run:
          name: "stylelint"
          when: always
          command: stylelint "$HOME/app/src/**/*.scss" "$HOME/app/theme/kss-assets/css/*.scss"

  test-a11y:
    <<: *defaults
    environment:
      GOOGLE_PROJECT_ID: planet4-production
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: *setup_environment
      - run: make -C deploy checkout
      - run: make -C deploy build
      - run: make -C deploy test-a11y
      - run:
          name: Analyse test results
          command: |
            errors=$(jq '.errors' ~/app/deploy/docker/source/pa11y/report.json)
            if [ "$errors" -gt 0 ]; then echo "Errors found, see report in artifacts." && exit 1; else echo "No errors, report available in artifacts."; fi
      - store_artifacts:
          path: ~/app/deploy/docker/source/pa11y

  deploy-dev:
    <<: *defaults
    environment:
      GOOGLE_PROJECT_ID: planet4-production
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: activate-gcloud-account.sh
      - run: docker-login.sh
      - run: make -C deploy checkout-master
      - run: make -C deploy docker-build
      - run: make -C deploy docker-push
      - run: make -C deploy dev

  promote:
    <<: *defaults
    steps:
      - run:
          name: Configure git
          command: |
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            ' >> ~/.ssh/known_hosts
      - run:
          name: Release
          command: |
            mkdir -p /tmp/workspace
            cd /tmp/workspace
            trigger-build.sh git@github.com:${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} master

  repositories:
    <<: *defaults
    steps:
      - run:
          name: Configure git
          command: |
            mkdir -p ~/.ssh
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
            ' >> ~/.ssh/known_hosts
      - run:
          name: Bump styleguide
          command: bump-styleguide.sh

  deploy-tag:
    <<: *defaults
    environment:
      GOOGLE_PROJECT_ID: planet4-production
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: activate-gcloud-account.sh
      - run: docker-login.sh
      - run: make -C deploy checkout-tag
      - run: make -C deploy docker-build
      - run: make -C deploy test-a11y
      - run: make -C deploy docker-push
      - run: make -C deploy prod
      - store_artifacts:
          path: ~/app/deploy/docker/source/pa11y

workflows:
  dev:
    jobs:
      - lint
      - test-a11y
      - deploy-dev:
          context: org-global
          requires:
            - lint
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - deploy-dev
          filters:
            branches:
              only: master
      - promote:
          context: org-global
          requires:
            - hold
          filters:
            branches:
              only: master
      - repositories:
          context: org-global
          requires:
            - promote
          filters:
            branches:
              only: master

  tag:
    jobs:
      - deploy-tag:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
